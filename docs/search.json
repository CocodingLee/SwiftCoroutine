{"Structs/Coroutine.html#/s:14SwiftCoroutine0B0V08isInsideB0SbvpZ":{"name":"isInsideCoroutine","abstract":"<p>Returns <code>true</code> if this property is called inside a coroutine.</p>","parent_name":"Coroutine"},"Structs/Coroutine.html#/s:14SwiftCoroutine0B0V5startyyyyKcFZ":{"name":"start(_:)","abstract":"<p>Starts a new coroutine.</p>","parent_name":"Coroutine"},"Structs/Coroutine.html#/s:14SwiftCoroutine0B0V5awaityyyyycXEKFZ":{"name":"await(_:)","abstract":"<p>Suspends a coroutine and resumes it on callback. Must be called inside a coroutine.</p>","parent_name":"Coroutine"},"Structs/Coroutine.html#/s:14SwiftCoroutine0B0V5awaityxyyxcXEKlFZ":{"name":"await(_:)","abstract":"<p>Suspends a coroutine and resumes it on callback.</p>","parent_name":"Coroutine"},"Structs/Coroutine.html#/s:14SwiftCoroutine0B0V5awaityx_q_tyyx_q_tcXEKr0_lFZ":{"name":"await(_:)","abstract":"<p>Suspends a coroutine and resumes it on callback. Must be called inside a coroutine.</p>","parent_name":"Coroutine"},"Structs/Coroutine.html#/s:14SwiftCoroutine0B0V5awaityx_q_q0_tyyx_q_q0_tcXEKr1_lFZ":{"name":"await(_:)","abstract":"<p>Suspends a coroutine and resumes it on callback.</p>","parent_name":"Coroutine"},"Structs/Coroutine.html#/s:14SwiftCoroutine0B0V5delayyy8Dispatch0D12TimeIntervalOKFZ":{"name":"delay(_:)","abstract":"<p>Suspends a coroutine for a certain time.  Must be called inside a coroutine.</p>","parent_name":"Coroutine"},"Structs/Coroutine.html":{"name":"Coroutine","abstract":"<p>Additional struct with utility methods to work with coroutines.</p>"},"Protocols/CoroutineScheduler.html#/s:14SwiftCoroutine0B9SchedulerP12scheduleTaskyyyycF":{"name":"scheduleTask(_:)","abstract":"<p>Performs the task at the next possible opportunity.</p>","parent_name":"CoroutineScheduler"},"Protocols/CoroutineScheduler.html#/s:14SwiftCoroutine0B9SchedulerPAAE05startB02in4taskyAA7CoScopeCSg_yyKctF":{"name":"startCoroutine(in:task:)","abstract":"<p>Start a new coroutine on the current scheduler.</p>","parent_name":"CoroutineScheduler"},"Protocols/CoroutineScheduler.html#/s:14SwiftCoroutine0B9SchedulerPAAE5awaityqd__qd__yKXEKlF":{"name":"await(_:)","abstract":"<p>Start a coroutine and await its result. Must be called inside other coroutine.</p>","parent_name":"CoroutineScheduler"},"Protocols/CoroutineScheduler.html#/s:14SwiftCoroutine0B9SchedulerPAAE15coroutineFutureyAA02CoE0Cyqd__Gqd__yKclF":{"name":"coroutineFuture(_:)","abstract":"<p>Starts a new coroutine and returns its future result.</p>","parent_name":"CoroutineScheduler"},"Protocols/CoroutineScheduler.html#/s:14SwiftCoroutine0B9SchedulerPAAE5actor2of10bufferType4bodyAA9CoChannelC6SenderCyqd___Gqd__m_AI06BufferG0Oyqd___GyAI8ReceiverCyqd___GKctlF":{"name":"actor(of:bufferType:body:)","abstract":"<p>Starts new coroutine that is receiving messages from its mailbox channel and returns its mailbox channel as a <code>Sender</code>.</p>","parent_name":"CoroutineScheduler"},"Protocols/CoCancellable.html#/s:14SwiftCoroutine13CoCancellableP6cancelyyF":{"name":"cancel()","abstract":"<p>Cancels the current <code>CoCancellable</code>.</p>","parent_name":"CoCancellable"},"Protocols/CoCancellable.html#/s:14SwiftCoroutine13CoCancellableP12whenCompleteyyyycF":{"name":"whenComplete(_:)","abstract":"<p>Adds an observer callback that is called when the <code>CoCancellable</code> is completed.</p>","parent_name":"CoCancellable"},"Protocols/CoCancellable.html#/s:14SwiftCoroutine13CoCancellablePAAE5added2toxAA0C5ScopeC_tF":{"name":"added(to:)","abstract":"<p>Adds weak referance of <code>self</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoScope.html\">CoScope</a></code>.</p>","parent_name":"CoCancellable"},"Protocols/CoCancellable.html":{"name":"CoCancellable","abstract":"<p>Undocumented</p>"},"Protocols/CoroutineScheduler.html":{"name":"CoroutineScheduler","abstract":"<p>A protocol that defines how to execute a task.</p>"},"Extensions/DispatchQueue.html#/s:14SwiftCoroutine0B9SchedulerP12scheduleTaskyyyycF":{"name":"scheduleTask(_:)","parent_name":"DispatchQueue"},"Extensions/Publisher.html#/s:7Combine9PublisherP14SwiftCoroutineE18subscribeCoChannel6bufferAD0fG0C8ReceiverCy6OutputQz_GAH10BufferTypeOyAL_G_tF":{"name":"subscribeCoChannel(buffer:)","abstract":"<p>Attaches <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoChannel/Receiver.html\">CoChannel.Receiver</a></code> as a subscriber and returns it.</p>","parent_name":"Publisher"},"Extensions/Publisher.html#/s:7Combine9PublisherP14SwiftCoroutineE17subscribeCoFutureAD0fG0Cy6OutputQzGyF":{"name":"subscribeCoFuture()","abstract":"<p>Attaches <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoFuture.html\">CoFuture</a></code> as a subscriber and returns it. <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoFuture.html\">CoFuture</a></code> will receive result only once.</p>","parent_name":"Publisher"},"Extensions/URLSession.html#/s:So12NSURLSessionC14SwiftCoroutineE12DataResponsea":{"name":"DataResponse","abstract":"<p>Undocumented</p>","parent_name":"URLSession"},"Extensions/URLSession.html#/s:So12NSURLSessionC14SwiftCoroutineE14dataTaskFuture3forAC02CoF0Cy10Foundation4DataV0D0_So13NSURLResponseC8responsetGAH3URLV_tF":{"name":"dataTaskFuture(for:)","abstract":"<p>Returns a future that wraps a URL session data task for a given URL.</p>","parent_name":"URLSession"},"Extensions/URLSession.html#/s:So12NSURLSessionC14SwiftCoroutineE14dataTaskFuture3forAC02CoF0Cy10Foundation4DataV0D0_So13NSURLResponseC8responsetGAH10URLRequestV_tF":{"name":"dataTaskFuture(for:)","abstract":"<p>Returns a future that wraps a URL session data task for a given URL request.</p>","parent_name":"URLSession"},"Extensions/URLSession.html":{"name":"URLSession"},"Extensions/Publisher.html":{"name":"Publisher"},"Extensions/DispatchQueue.html":{"name":"DispatchQueue"},"Enums/CoroutineError.html#/s:14SwiftCoroutine0B5ErrorO8canceledyA2CmF":{"name":"canceled","abstract":"<p>Undocumented</p>","parent_name":"CoroutineError"},"Enums/CoroutineError.html#/s:14SwiftCoroutine0B5ErrorO013calledOutsideB0yA2CmF":{"name":"calledOutsideCoroutine","abstract":"<p>Undocumented</p>","parent_name":"CoroutineError"},"Enums/CoFutureError.html#/s:14SwiftCoroutine13CoFutureErrorO8canceledyA2CmF":{"name":"canceled","abstract":"<p>Undocumented</p>","parent_name":"CoFutureError"},"Enums/CoFutureError.html#/s:14SwiftCoroutine13CoFutureErrorO7timeoutyA2CmF":{"name":"timeout","abstract":"<p>Undocumented</p>","parent_name":"CoFutureError"},"Enums/CoChannelError.html#/s:14SwiftCoroutine14CoChannelErrorO6closedyA2CmF":{"name":"closed","abstract":"<p>Undocumented</p>","parent_name":"CoChannelError"},"Enums/CoChannelError.html#/s:14SwiftCoroutine14CoChannelErrorO8canceledyA2CmF":{"name":"canceled","abstract":"<p>Undocumented</p>","parent_name":"CoChannelError"},"Enums/CoChannelError.html":{"name":"CoChannelError","abstract":"<p>Undocumented</p>"},"Enums/CoFutureError.html":{"name":"CoFutureError","abstract":"<p>Undocumented</p>"},"Enums/CoroutineError.html":{"name":"CoroutineError","abstract":"<p>Undocumented</p>"},"Classes/CoScope.html#/s:14SwiftCoroutine7CoScopeCACycfc":{"name":"init()","abstract":"<p>Initializes a scope.</p>","parent_name":"CoScope"},"Classes/CoScope.html#/s:14SwiftCoroutine7CoScopeC3addyyAA0C11Cancellable_pF":{"name":"add(_:)","abstract":"<p>Adds weak referance of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CoCancellable.html\">CoCancellable</a></code> to be canceled when the scope is being canceled or deinited.</p>","parent_name":"CoScope"},"Classes/CoScope.html#/s:14SwiftCoroutine7CoScopeC7isEmptySbvp":{"name":"isEmpty","abstract":"<p>Returns <code>true</code> if the scope is empty (contains no <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CoCancellable.html\">CoCancellable</a></code>).</p>","parent_name":"CoScope"},"Classes/CoScope.html#/s:14SwiftCoroutine7CoScopeC10isCanceledSbvp":{"name":"isCanceled","abstract":"<p>Returns <code>true</code> if the scope is canceled.</p>","parent_name":"CoScope"},"Classes/CoScope.html#/s:14SwiftCoroutine7CoScopeC6cancelyyF":{"name":"cancel()","abstract":"<p>Cancels the scope and all <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CoCancellable.html\">CoCancellable</a></code> that it contains.</p>","parent_name":"CoScope"},"Classes/CoScope.html#/s:14SwiftCoroutine7CoScopeC12whenCompleteyyyycF":{"name":"whenComplete(_:)","abstract":"<p>Adds an observer callback that is called when the <code>CoScope</code> is canceled or deinited.</p>","parent_name":"CoScope"},"Classes/CoPromise.html#/s:14SwiftCoroutine9CoPromiseCACyxGycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"CoPromise"},"Classes/CoPromise.html#/s:14SwiftCoroutine9CoPromiseC8complete4withys6ResultOyxqd__G_ts5ErrorRd__lF":{"name":"complete(with:)","abstract":"<p>Undocumented</p>","parent_name":"CoPromise"},"Classes/CoPromise.html#/s:14SwiftCoroutine9CoPromiseC7successyyxF":{"name":"success(_:)","abstract":"<p>Undocumented</p>","parent_name":"CoPromise"},"Classes/CoPromise.html#/s:14SwiftCoroutine9CoPromiseC4failyys5Error_pF":{"name":"fail(_:)","abstract":"<p>Undocumented</p>","parent_name":"CoPromise"},"Classes/CoPromise.html#/s:14SwiftCoroutine9CoPromiseC8complete4withyAA0C6FutureCyxG_tF":{"name":"complete(with:)","abstract":"<p>Undocumented</p>","parent_name":"CoPromise"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC7promiseACyxGyys6ResultOyxs5Error_pGcXE_tcfc":{"name":"init(promise:)","abstract":"<p>Initializes a future that invokes a promise closure.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC4taskACyxGxyKc_tcfc":{"name":"init(task:)","abstract":"<p>Starts a new coroutine and initializes future with its result.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC6resultACyxGs6ResultOyxs5Error_pG_tcfc":{"name":"init(result:)","abstract":"<p>Initializes a future with result.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC6results6ResultOyxs5Error_pGSgvp":{"name":"result","abstract":"<p>Returns completed result or nil if this future has not been completed yet.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC10isCanceledSbvp":{"name":"isCanceled","abstract":"<p>Returns <code>true</code> when the current future is canceled.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC6cancelyyF":{"name":"cancel()","abstract":"<p>Cancels the current future.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC5awaitxyKF":{"name":"await()","abstract":"<p>Await for the result of this <code>CoFuture</code> without blocking the current thread. Must be called inside a coroutine.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC5await7timeoutx8Dispatch0G12TimeIntervalO_tKF":{"name":"await(timeout:)","abstract":"<p>Await for the result of this <code>CoFuture</code> without blocking the current thread. Must be called inside a coroutine.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC3mapyACyqd__Gqd__xKclF":{"name":"map(_:)","abstract":"<p>When future is fulfilled, run the provided callback, which performs a synchronous computation and return transformed value.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC7recoveryACyxGxs5Error_pKcF":{"name":"recover(_:)","abstract":"<p>When future is in an error state, run the provided callback, which can recover from the error and return a new value.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC9mapResultyACyqd__Gs0F0Oyqd__s5Error_pGAGyxsAH_pGclF":{"name":"mapResult(_:)","abstract":"<p>When future is fulfilled, run the provided callback, which performs a synchronous computation and return transformed result.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC7flatMapyACyqd__GAExclF":{"name":"flatMap(_:)","abstract":"<p>When the current <code>CoFuture</code> is fulfilled, run the provided callback, which will provide a new <code>CoFuture</code>.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC12flatMapErroryACyxGAEs0G0_pcF":{"name":"flatMapError(_:)","abstract":"<p>When the current <code>CoFuture</code> is in an error state, run the provided callback, which","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC13flatMapResultyACyqd__GAEs0G0Oyxs5Error_pGclF":{"name":"flatMapResult(_:)","abstract":"<p>When the current <code>CoFuture</code> is fulfilled, run the provided callback, which will provide a new <code>CoFuture</code>.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC12whenCompleteyyys6ResultOyxs5Error_pGcF":{"name":"whenComplete(_:)","abstract":"<p>Adds an observer callback that is called when the <code>CoFuture</code> has any result.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC11whenSuccessyyyxcF":{"name":"whenSuccess(_:)","abstract":"<p>Adds an observer callback that is called when the <code>CoFuture</code> has a success result.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC11whenFailureyyys5Error_pcF":{"name":"whenFailure(_:)","abstract":"<p>Adds an observer callback that is called when the <code>CoFuture</code> has a failure result.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC12whenCanceledyyyycF":{"name":"whenCanceled(_:)","abstract":"<p>Adds an observer callback that is called when the <code>CoFuture</code> is canceled.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC12whenCompleteyyyycF":{"name":"whenComplete(_:)","abstract":"<p>Adds an observer callback that is called when the <code>CoFuture</code> has any result.</p>","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"CoFuture"},"Classes/CoFuture.html#/s:14SwiftCoroutine8CoFutureC9publisher7Combine12AnyPublisherVyxs5Error_pGyF":{"name":"publisher()","abstract":"<p>Returns a publisher that emits result of this <code>CoFuture</code>.</p>","parent_name":"CoFuture"},"Classes/CoChannel/Sender.html#/s:14SwiftCoroutine9CoChannelC6SenderC10bufferTypeAC06BufferG0Oyx_Gvp":{"name":"bufferType","abstract":"<p>The type of channel buffer.</p>","parent_name":"Sender"},"Classes/CoChannel/Sender.html#/s:14SwiftCoroutine9CoChannelC6SenderC5countSivp":{"name":"count","abstract":"<p>Returns a number of elements in this channel.</p>","parent_name":"Sender"},"Classes/CoChannel/Sender.html#/s:14SwiftCoroutine9CoChannelC6SenderC7isEmptySbvp":{"name":"isEmpty","abstract":"<p>Returns <code>true</code> if the channel is empty (contains no elements), which means no elements to receive.</p>","parent_name":"Sender"},"Classes/CoChannel/Sender.html#/s:14SwiftCoroutine9CoChannelC6SenderC9awaitSendyyxKF":{"name":"awaitSend(_:)","abstract":"<p>Sends the element to this channel, suspending the coroutine while the buffer of this channel is full. Must be called inside a coroutine.</p>","parent_name":"Sender"},"Classes/CoChannel/Sender.html#/s:14SwiftCoroutine9CoChannelC6SenderC10sendFutureyyAA0cG0CyxGF":{"name":"sendFuture(_:)","abstract":"<p>Adds the future&rsquo;s value to this channel when it will be available.</p>","parent_name":"Sender"},"Classes/CoChannel/Sender.html#/s:14SwiftCoroutine9CoChannelC6SenderC5offerySbxF":{"name":"offer(_:)","abstract":"<p>Immediately adds the value to this channel, if this doesn’t violate its capacity restrictions, and returns true.","parent_name":"Sender"},"Classes/CoChannel/Sender.html#/s:14SwiftCoroutine9CoChannelC6SenderC5closeSbyF":{"name":"close()","abstract":"<p>Closes this channel. No more send should be performed on the channel.</p>","parent_name":"Sender"},"Classes/CoChannel/Sender.html#/s:14SwiftCoroutine9CoChannelC6SenderC8isClosedSbvp":{"name":"isClosed","abstract":"<p>Returns <code>true</code> if the channel is closed.</p>","parent_name":"Sender"},"Classes/CoChannel/Sender.html#/s:14SwiftCoroutine9CoChannelC6SenderC6cancelyyF":{"name":"cancel()","abstract":"<p>Closes the channel and removes all buffered sent elements from it.</p>","parent_name":"Sender"},"Classes/CoChannel/Sender.html#/s:14SwiftCoroutine9CoChannelC6SenderC10isCanceledSbvp":{"name":"isCanceled","abstract":"<p>Returns <code>true</code> if the channel is canceled.</p>","parent_name":"Sender"},"Classes/CoChannel/Sender.html#/s:14SwiftCoroutine9CoChannelC6SenderC12whenCanceledyyyycF":{"name":"whenCanceled(_:)","abstract":"<p>Adds an observer callback that is called when the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoChannel.html\">CoChannel</a></code> is canceled.</p>","parent_name":"Sender"},"Classes/CoChannel/Sender.html#/s:14SwiftCoroutine9CoChannelC6SenderC12whenCompleteyyyycF":{"name":"whenComplete(_:)","abstract":"<p>Adds an observer callback that is called when the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoChannel.html\">CoChannel</a></code> is completed (closed, canceled or deinited).</p>","parent_name":"Sender"},"Classes/CoChannel/Receiver.html#/s:14SwiftCoroutine9CoChannelC8ReceiverC10bufferTypeAC06BufferG0Oyx_Gvp":{"name":"bufferType","abstract":"<p>The type of channel buffer.</p>","parent_name":"Receiver"},"Classes/CoChannel/Receiver.html#/s:14SwiftCoroutine9CoChannelC8ReceiverC12awaitReceivexyKF":{"name":"awaitReceive()","abstract":"<p>Retrieves and removes an element from this channel if it’s not empty,","parent_name":"Receiver"},"Classes/CoChannel/Receiver.html#/s:14SwiftCoroutine9CoChannelC8ReceiverC13receiveFutureAA0cG0CyxGyF":{"name":"receiveFuture()","abstract":"<p>Creates <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoFuture.html\">CoFuture</a></code> with retrieved value from this channel.</p>","parent_name":"Receiver"},"Classes/CoChannel/Receiver.html#/s:14SwiftCoroutine9CoChannelC8ReceiverC4pollxSgyF":{"name":"poll()","abstract":"<p>Retrieves and removes an element from this channel.</p>","parent_name":"Receiver"},"Classes/CoChannel/Receiver.html#/s:14SwiftCoroutine9CoChannelC8ReceiverC11whenReceiveyyys6ResultOyxAA0cD5ErrorOGcF":{"name":"whenReceive(_:)","abstract":"<p>Adds an observer callback to receive an element from this channel.</p>","parent_name":"Receiver"},"Classes/CoChannel/Receiver.html#/s:14SwiftCoroutine9CoChannelC8ReceiverC5countSivp":{"name":"count","abstract":"<p>Returns a number of elements in this channel.</p>","parent_name":"Receiver"},"Classes/CoChannel/Receiver.html#/s:14SwiftCoroutine9CoChannelC8ReceiverC7isEmptySbvp":{"name":"isEmpty","abstract":"<p>Returns <code>true</code> if the channel is empty (contains no elements), which means no elements to receive.</p>","parent_name":"Receiver"},"Classes/CoChannel/Receiver.html#/s:14SwiftCoroutine9CoChannelC8ReceiverC3mapyAEyqd___Gqd__xclF":{"name":"map(_:)","abstract":"<p>Returns new <code>Receiver</code> that provides transformed values from this <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoChannel.html\">CoChannel</a></code>.</p>","parent_name":"Receiver"},"Classes/CoChannel/Receiver.html#/s:14SwiftCoroutine9CoChannelC8ReceiverC8isClosedSbvp":{"name":"isClosed","abstract":"<p>Returns <code>true</code> if the channel is closed.</p>","parent_name":"Receiver"},"Classes/CoChannel/Receiver.html#/s:14SwiftCoroutine9CoChannelC8ReceiverC6cancelyyF":{"name":"cancel()","abstract":"<p>Closes the channel and removes all buffered sent elements from it.</p>","parent_name":"Receiver"},"Classes/CoChannel/Receiver.html#/s:14SwiftCoroutine9CoChannelC8ReceiverC10isCanceledSbvp":{"name":"isCanceled","abstract":"<p>Returns <code>true</code> if the channel is canceled.</p>","parent_name":"Receiver"},"Classes/CoChannel/Receiver.html#/s:14SwiftCoroutine9CoChannelC8ReceiverC12whenCanceledyyyycF":{"name":"whenCanceled(_:)","abstract":"<p>Adds an observer callback that is called when the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoChannel.html\">CoChannel</a></code> is canceled.</p>","parent_name":"Receiver"},"Classes/CoChannel/Receiver.html#/s:14SwiftCoroutine9CoChannelC8ReceiverC12whenCompleteyyyycF":{"name":"whenComplete(_:)","abstract":"<p>Adds an observer callback that is called when the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoChannel.html\">CoChannel</a></code> is completed (closed, canceled or deinited).</p>","parent_name":"Receiver"},"Classes/CoChannel/Receiver.html#/s:14SwiftCoroutine9CoChannelC8ReceiverC12makeIterators03AnyG0VyxGyF":{"name":"makeIterator()","abstract":"<p>Make an iterator which successively retrieves and removes values from the channel.</p>","parent_name":"Receiver"},"Classes/CoChannel/Receiver.html#/s:14SwiftCoroutine9CoChannelC8ReceiverC9publisher7Combine12AnyPublisherVyxAA0cD5ErrorOGyF":{"name":"publisher()","abstract":"<p>Returns a publisher that emits elements of this <code>Receiver</code>.</p>","parent_name":"Receiver"},"Classes/CoChannel/BufferType.html#/s:14SwiftCoroutine9CoChannelC10BufferTypeO4noneyAEyx_GAGmlF":{"name":"none","abstract":"<p>This channel does not have any buffer.</p>","parent_name":"BufferType"},"Classes/CoChannel/BufferType.html#/s:14SwiftCoroutine9CoChannelC10BufferTypeO8bufferedyAEyx_GSi_tcAGmlF":{"name":"buffered(capacity:)","abstract":"<p>This channel have a buffer with the specified capacity.</p>","parent_name":"BufferType"},"Classes/CoChannel/BufferType.html#/s:14SwiftCoroutine9CoChannelC10BufferTypeO9unlimitedyAEyx_GAGmlF":{"name":"unlimited","abstract":"<p>This channel has a buffer with unlimited capacity.</p>","parent_name":"BufferType"},"Classes/CoChannel/BufferType.html#/s:14SwiftCoroutine9CoChannelC10BufferTypeO9conflatedyAEyx_GAGmlF":{"name":"conflated","abstract":"<p>This channel buffers at most one element and offer invocations,","parent_name":"BufferType"},"Classes/CoChannel/BufferType.html":{"name":"BufferType","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoChannel.html\">CoChannel</a></code> buffer type.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC10bufferTypeACyxGAC06BufferF0Oyx_G_tcfc":{"name":"init(bufferType:)","abstract":"<p>Initializes a channel.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC8capacityACyxGSi_tcfc":{"name":"init(capacity:)","abstract":"<p>Initializes a channel with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoChannel/BufferType.html#/s:14SwiftCoroutine9CoChannelC10BufferTypeO8bufferedyAEyx_GSi_tcAGmlF\">BufferType.buffered(capacity:)</a></code> .</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC10bufferTypeAC06BufferF0Oyx_Gvp":{"name":"bufferType","abstract":"<p>The type of channel buffer.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC4pairAC8ReceiverCyx_G8receiver_AC6SenderCyx_G6sendertvp":{"name":"pair","abstract":"<p>Returns tuple of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoChannel/Receiver.html\">Receiver</a></code> and <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoChannel/Sender.html\">Sender</a></code>.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC6senderAC6SenderCyx_Gvp":{"name":"sender","abstract":"<p>A <code>CoChannel</code> wrapper that provides send-only functionality.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC9awaitSendyyxKF":{"name":"awaitSend(_:)","abstract":"<p>Sends the element to this channel, suspending the coroutine while the buffer of this channel is full.","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC10sendFutureyyAA0cF0CyxGF":{"name":"sendFuture(_:)","abstract":"<p>Adds the future&rsquo;s value to this channel when it will be available.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC5offerySbxF":{"name":"offer(_:)","abstract":"<p>Immediately adds the value to this channel, if this doesn’t violate its capacity restrictions, and returns true.","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC8receiverAC8ReceiverCyx_Gvp":{"name":"receiver","abstract":"<p>A <code>CoChannel</code> wrapper that provides receive-only functionality.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC12awaitReceivexyKF":{"name":"awaitReceive()","abstract":"<p>Retrieves and removes an element from this channel if it’s not empty, or suspends a coroutine while the channel is empty.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC13receiveFutureAA0cF0CyxGyF":{"name":"receiveFuture()","abstract":"<p>Creates <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoFuture.html\">CoFuture</a></code> with retrieved value from this channel.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC4pollxSgyF":{"name":"poll()","abstract":"<p>Retrieves and removes an element from this channel.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC11whenReceiveyyys6ResultOyxAA0cD5ErrorOGcF":{"name":"whenReceive(_:)","abstract":"<p>Adds an observer callback to receive an element from this channel.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC5countSivp":{"name":"count","abstract":"<p>Returns a number of elements in this channel.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC7isEmptySbvp":{"name":"isEmpty","abstract":"<p>Returns <code>true</code> if the channel is empty (contains no elements), which means no elements to receive.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC3mapyAC8ReceiverCyqd___Gqd__xclF":{"name":"map(_:)","abstract":"<p>Returns new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoChannel/Receiver.html\">Receiver</a></code> that provides transformed values from this <code>CoChannel</code>.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC5closeSbyF":{"name":"close()","abstract":"<p>Closes this channel. No more send should be performed on the channel.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC8isClosedSbvp":{"name":"isClosed","abstract":"<p>Returns <code>true</code> if the channel is closed.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC6cancelyyF":{"name":"cancel()","abstract":"<p>Closes the channel and removes all buffered sent elements from it.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC10isCanceledSbvp":{"name":"isCanceled","abstract":"<p>Returns <code>true</code> if the channel is canceled.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC12whenCanceledyyyycF":{"name":"whenCanceled(_:)","abstract":"<p>Adds an observer callback that is called when the <code>CoChannel</code> is canceled.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC12whenCompleteyyyycF":{"name":"whenComplete(_:)","abstract":"<p>Adds an observer callback that is called when the <code>CoChannel</code> is completed (closed, canceled or deinited).</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC12makeIterators03AnyF0VyxGyF":{"name":"makeIterator()","abstract":"<p>Make an iterator which successively retrieves and removes values from the channel.</p>","parent_name":"CoChannel"},"Classes/CoChannel/Receiver.html":{"name":"Receiver","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoChannel.html\">CoChannel</a></code> wrapper that provides receive-only functionality.</p>","parent_name":"CoChannel"},"Classes/CoChannel/Sender.html":{"name":"Sender","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CoChannel.html\">CoChannel</a></code> wrapper that provides send-only functionality.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html#/s:14SwiftCoroutine9CoChannelC9publisher7Combine12AnyPublisherVyxAA0cD5ErrorOGyF":{"name":"publisher()","abstract":"<p>Returns a publisher that emits elements of this <code>CoChannel</code>.</p>","parent_name":"CoChannel"},"Classes/CoChannel.html":{"name":"CoChannel","abstract":"<p>Channel is a non-blocking primitive for communication between a sender and a receiver."},"Classes/CoFuture.html":{"name":"CoFuture","abstract":"<p>Holder for a result that will be provided later.</p>"},"Classes/CoPromise.html":{"name":"CoPromise","abstract":"<p>A promise to provide a result later.</p>"},"Classes/CoScope.html":{"name":"CoScope","abstract":"<p>The holder of uncompleted <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CoCancellable.html\">CoCancellable</a></code> and coroutines.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}